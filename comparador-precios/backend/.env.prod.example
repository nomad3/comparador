# --- Production Environment Variables ---
# IMPORTANT: Create a real .env.prod file based on this example
#            and store it securely. DO NOT commit .env.prod to Git.

# Application Settings
LOG_LEVEL=INFO
# Set ENVIRONMENT=production if your code uses it (e.g., for CORS behavior)
# ENVIRONMENT=production

# PostgreSQL (Use strong, unique passwords generated securely!)
POSTGRES_SERVER=db
POSTGRES_PORT=5432
POSTGRES_USER=prod_comparador_user
POSTGRES_PASSWORD=REPLACE_WITH_YOUR_STRONG_POSTGRES_PASSWORD # Replace with a generated password
POSTGRES_DB=prod_comparador_db
# SQLAlchemy Database URL (uses variables above)
DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB}

# Redis
REDIS_HOST=cache
REDIS_PORT=6379
CACHE_EXPIRATION_SECONDS=3600 # 1 hour (adjust as needed)

# CORS Origins for Production (Replace with your actual frontend domain(s))
# Separate multiple origins with a comma, no spaces around the comma.
# Example: BACKEND_CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
BACKEND_CORS_ORIGINS= # Recommended: Set specific origins for production

# FastAPI/Uvicorn (Optional: settings like workers if not using gunicorn/hypercorn)

# Scraping Settings (Defaults from config.py are usually fine unless override needed)
# SCRAPER_TIMEOUT_SECONDS=30

# Secret Key (Required if using features like JWT tokens or signed cookies in the future)
# Generate a strong random key, e.g., using: openssl rand -hex 32
# SECRET_KEY=REPLACE_WITH_YOUR_STRONG_RANDOM_SECRET_KEY
